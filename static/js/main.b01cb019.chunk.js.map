{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","id","setID","todo","setTodo","addTodo","setAddTodo","console","log","process","Hello","className","type","value","onChange","e","target","placeholder","onClick","length","map","item","index","width","i","filter","editTodo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"qNAgDeA,MA9Cf,WAAgB,IAAD,EACOC,mBAAS,MADhB,mBACNC,EADM,KACFC,EADE,OAEWF,qBAFX,mBAENG,EAFM,KAEAC,EAFA,OAGiBJ,mBAAS,IAH1B,mBAGNK,EAHM,KAGGC,EAHH,KAsBb,OADAC,QAAQC,IAAIC,yIAAYC,MAAO,OAE7B,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,uBAAOC,KAAK,OAAOD,UAAU,eAAeE,MAAOV,EAAMW,SAAU,SAAAC,GAAC,OAAIX,EAAQ,CAACW,EAAEC,OAAOH,SAASI,YAAY,kBAEjH,qBAAKN,UAAU,iBAAf,SACE,wBAAQA,UAAU,kBAAkBO,QAAS,kBAAY,MAANjB,GAxBzDG,EAAQ,SACRE,EAAW,GAAD,mBAAKD,GAAL,CAAcF,OAUxBE,EAAQJ,GAAME,EACdG,EAAW,YAAID,IACfH,EAAM,WACNE,EAAQ,MAUF,SAAoG,OAAPH,EAAc,MAAQ,WAGrH,qBAAKU,UAAU,iBAAf,SACE,uBAAOA,UAAU,uBAAjB,SACGN,EAAQc,OAAS,GAAKd,EAAQe,KAAI,SAACC,EAAMC,GAAP,OACjC,mCAAiB,oBAAIC,MAAM,MAAV,SAAiBD,IAAW,6BAAKD,IAAU,qBAAIE,MAAM,MAAV,cAAiB,wBAAQZ,UAAU,yBAAyBO,QAAS,kBA3BzHM,EA2B0IF,OA1B5JhB,EAAWD,EAAQoB,QAAO,SAACJ,EAAMC,GAAP,OAAiBA,IAAUE,MADvD,IAAoBA,GA2BqE,oBAAjB,IAA8G,wBAAQb,UAAU,uBAAuBO,QAAS,kBAxBxO,SAAkBI,EAAOD,GACvBnB,EAAMoB,GACNlB,EAAQiB,GAsBoOK,CAASJ,EAAOD,IAAxE,uBAAjKC,gBCzBRK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCGdQ,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b01cb019.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport './App.css';\nfunction App() {\n  const [id, setID] = useState(null)\n  const [todo, setTodo] = useState()\n  const [addTodo, setAddTodo] = useState([])\n  function submitTodo() {\n    setTodo(\"\")\n    setAddTodo([...addTodo, todo])\n  }\n  function deleteTodo(i) {\n    setAddTodo(addTodo.filter((item, index) => index !== i))\n  }\n  function editTodo(index, item) {\n    setID(index)\n    setTodo(item)\n  }\n  function editData() {\n    addTodo[id] = todo\n    setAddTodo([...addTodo]);\n    setID(null)\n    setTodo(\"\")\n  }\n  console.log(process.env.Hello, \"env\");\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-5\">\n        <div className=\"col-md-10 pr-0\">\n          <input type=\"text\" className=\"form-control\" value={todo} onChange={e => setTodo([e.target.value])} placeholder=\"Enter Value\" />\n        </div>\n        <div className=\"col-md-2  pl-1\">\n          <button className=\"btn btn-primary\" onClick={() => id == null ? submitTodo() : editData()} >{id === null ? \"add\" : \"edit\"}</button>\n\n        </div>\n        <div className=\"col-md-11 mt-5\">\n          <table className=\"table table-bordered\">\n            {addTodo.length > 0 && addTodo.map((item, index) => (\n              <tr key={index}> <td width=\"100\">{index}</td><td>{item}</td><td width=\"170\"> <button className=\"btn btn-outline-danger\" onClick={() => deleteTodo(index)}>Delete</button> <button className=\"btn btn-outline-info\" onClick={() => editTodo(index, item)}>Edit</button></td></tr>))}\n          </table>\n        </div>\n\n      </div>\n\n    </div>\n  );\n}\n\n\nexport default App;\n\n\n// import React, { useEffect } from 'react'\n// import Countss from './Count'\n// import { createStore } from 'redux'\n// import { Provider } from \"react-redux\"\n\n// export default function App() {\n\n\n//   function reducer(state, action) {\n\n//     switch (action.type) {\n//       case \"inecrement\":\n//         return {\n//           count: state.count + 1\n//         };\n//       case \"dnecrement\":\n//         return {\n//           count: state.count - 1\n//         }\n//       default:\n//         return {\n//           count: 0\n//         }\n//     }\n\n//   }\n\n//   const store = createStore(reducer);\n//   console.log(\"store\", store);\n\n//   return (\n//     <Provider store={store}>\n//       <Countss />\n//     </Provider>\n\n//   )\n// }\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\n\n\nReactDOM.render(\n\n  <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}